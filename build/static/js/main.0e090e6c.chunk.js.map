{"version":3,"sources":["redux/actions/actions.js","App.js","redux/actions/FetchAction.js","redux/actions/changeActions.js","reportWebVitals.js","redux/reducer/changeReducer.js","redux/reducer/IndexReducer.js","redux/reducer/quoteReducer.js","redux/store.js","index.js"],"names":["Myactions","App","useSelector","state","quotes","myObject","unique","color","Allquotes","q","dispatch","useDispatch","useEffect","a","type","axios","get","result","data","quote","payload","style","background","className","author","onClick","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","change","random","Math","floor","r","g","b","o","allReducer","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","Store","createStore","applyMiddleware","thunk","Persistor","persistStore","ReactDOM","render","StrictMode","store","loading","persistor","document","getElementById"],"mappings":"gPAAaA,EACJ,QADIA,EAEF,UAFEA,EAGH,S,iBC2CKC,EAxCH,WAAO,IAAD,MACaC,aAAY,SAACC,GAAD,OAAWA,KAA5CC,EADQ,EACRA,OAAQC,EADA,EACAA,SADA,cAEQA,EAFR,GAETC,EAFS,KAEDC,EAFC,KAGVC,EAAYJ,EAAOK,EACnBC,EAAWC,cACjBC,qBAAU,WACRF,ECKF,uCAAO,WAAgBA,GAAhB,iBAAAG,EAAA,6DACLH,EAfK,CACLI,KAAMd,IAaD,SAEgBe,IAAMC,IAJ7B,0IAEO,cAECC,EAFD,gBAGeA,EAAOC,KAAKd,OAH3B,OAGCe,EAHD,OAILT,EAbK,CACLI,KAAMd,EACNoB,QAWmBD,IAJd,2CAAP,yDDJG,IAIH,OACE,qBACEE,MAAO,CAAEC,WAAYf,GACrBgB,UAAU,+DAFZ,SAIE,sBAAKA,UAAU,4FAAf,UACE,qBAAKA,UAAU,4CAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,6BAAhB,mBACGf,EAAUF,UADb,aACG,EAAmBa,YAI1B,qBAAKI,UAAU,oDAAf,SACE,uBAAMA,UAAU,UAAhB,wBAA4Bf,EAAUF,UAAtC,aAA4B,EAAmBkB,YAGjD,wBACED,UAAU,6CACVE,QAtBY,WEbA,IAACL,EFcnBV,GEdmBU,EFcHZ,EAAUkB,OEbrB,CACLZ,KAAMd,EACNoB,cFiCMC,MAAO,CAAEC,WAAW,GAAD,OAAKf,IAH1B,6BGtBOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDCLRQ,EAAS,SAACV,GACd,IAAIW,EAASC,KAAKC,MAAMD,KAAKD,SAAWX,GACpCc,EAAIF,KAAKC,MAAM,IAAMD,KAAKD,UAC1BI,EAAIH,KAAKC,MAAM,IAAMD,KAAKD,UAC1BK,EAAIJ,KAAKC,MAAM,IAAMD,KAAKD,UAC1BM,EAAoB,EAAhBL,KAAKD,SACb,MAAO,CAACA,EAAD,eAAiBG,EAAjB,YAAsBC,EAAtB,YAA2BC,EAA3B,YAAgCC,EAAhC,OCJIC,EAAaC,YAAgB,CACxCzC,OCH0B,WAA2C,IAA1CD,EAAyC,uDAAjC,CAAEM,EAAG,GAAIiB,OAAQ,GAAKoB,EAAW,uCACpE,OAAQA,EAAOhC,MACb,KAAKd,EACH,OAAOG,EAET,KAAKH,EACH,MAAO,CAAES,EAAGqC,EAAO1B,QAASM,OAAQoB,EAAO1B,QAAQM,QAErD,QACE,OAAOvB,IDLXE,SDK2B,WAAqC,IAApCF,EAAmC,uDAA3B,CAAC,EAAG,WAAY2C,EAAW,uCAC/D,OAAQA,EAAOhC,MACb,KAAKd,EACH,OAAOoC,EAAOU,EAAO1B,SAEvB,QACE,OAAOjB,MGZP4C,EAAgB,CACpBC,IAAK,OACLC,aAEIC,EAAmBC,YAAeJ,EAAeH,GAC5CQ,EAAQC,YAAYH,EAAkBI,YAAgBC,MACtDC,EAAYC,YAAaL,GCJpCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOT,EAAjB,SACE,cAAC,IAAD,CAAaU,QAAS,KAAMC,UAAWP,EAAvC,SACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1BtC,M","file":"static/js/main.0e090e6c.chunk.js","sourcesContent":["export const Myactions = {\r\n  FETCH: \"Fetch\",\r\n  RECIEVE: \"Recieve\",\r\n  CHANGE: \"Change\",\r\n};\r\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FETCHING } from \"./redux/actions/FetchAction\";\nimport { Change } from \"./redux/actions/changeActions\";\n\nconst App = () => {\n  const { quotes, myObject } = useSelector((state) => state);\n  const [unique, color] = myObject;\n  const Allquotes = quotes.q;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(FETCHING());\n  }, []);\n  const handleClick = () => {\n    dispatch(Change(Allquotes.length));\n  };\n  return (\n    <div\n      style={{ background: color }}\n      className=\"flex flex-col  w-screen h-screen justify-center items-center\"\n    >\n      <div className=\"w-2/4 h-2/4 bg-gray-50 p-4 rounded-md shadow-md flex flex-col justify-center items-center\">\n        <div className=\"flex justify-center items-center flex-col\">\n          <div className=\"flex flex-row\">\n            <span className=\"text-3xl m-2 font-semibold\">\n              {Allquotes[unique]?.quote}\n            </span>\n          </div>\n        </div>\n        <div className=\"flex flex-row justify-end items-center w-full p-8\">\n          <span className=\"text-xl\">-{Allquotes[unique]?.author}</span>\n        </div>\n\n        <button\n          className=\"m-4 p-4 text-white rounded-sm outline-none\"\n          onClick={handleClick}\n          style={{ background: `${color}` }}\n        >\n          Click Me!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { Myactions } from \"./actions\";\r\nimport axios from \"axios\";\r\nexport const Fetching = () => {\r\n  return {\r\n    type: Myactions.FETCH,\r\n  };\r\n};\r\nexport const Recieving = (payload) => {\r\n  return {\r\n    type: Myactions.RECIEVE,\r\n    payload,\r\n  };\r\n};\r\n\r\nconst URL =\r\n  \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\r\nexport const FETCHING = () => {\r\n  return async function (dispatch) {\r\n    dispatch(Fetching());\r\n    const result = await axios.get(URL);\r\n    const quote = await result.data.quotes;\r\n    dispatch(Recieving(quote));\r\n  };\r\n};\r\n","import { Myactions } from \"./actions\";\r\nexport const Change = (payload) => {\r\n  return {\r\n    type: Myactions.CHANGE,\r\n    payload,\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Myactions } from \"../actions/actions\";\r\n\r\nconst change = (length) => {\r\n  var random = Math.floor(Math.random() * length);\r\n  var r = Math.floor(256 * Math.random());\r\n  var g = Math.floor(256 * Math.random());\r\n  var b = Math.floor(256 * Math.random());\r\n  var o = Math.random() * 1;\r\n  return [random, `rgba(${r},${g},${b},${o})`];\r\n};\r\n\r\nexport const changeReducer = (state = [0, \"#1a1c20\"], action) => {\r\n  switch (action.type) {\r\n    case Myactions.CHANGE: {\r\n      return change(action.payload);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { changeReducer } from \"./changeReducer\";\r\nimport { quoteReducer } from \"./quoteReducer\";\r\n\r\nexport const allReducer = combineReducers({\r\n  quotes: quoteReducer,\r\n  myObject: changeReducer,\r\n});\r\n","import { Myactions } from \"../actions/actions\";\r\n\r\nexport const quoteReducer = (state = { q: [], length: 0 }, action) => {\r\n  switch (action.type) {\r\n    case Myactions.FETCH: {\r\n      return state;\r\n    }\r\n    case Myactions.RECIEVE: {\r\n      return { q: action.payload, length: action.payload.length };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { allReducer } from \"./reducer/IndexReducer\";\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, allReducer);\r\nexport let Store = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport let Persistor = persistStore(Store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Store, Persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <PersistGate loading={null} persistor={Persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}